# Generated by Django 4.1.4 on 2022-12-28 14:23

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Userdata',
            fields=[
                ('userid', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True, verbose_name='아이디')),
                ('user_name', models.CharField(max_length=30, verbose_name='이름')),
                ('mail', models.CharField(max_length=50, unique=True, verbose_name='이메일')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='생년월일')),
                ('experience', models.CharField(choices=[('0', '없음'), ('1', '1년이하'), ('3', '3년이하'), ('5', '5년이하')], max_length=5, verbose_name='투자 경험')),
                ('now_money', models.BigIntegerField(blank=True, default=100000000, null=True)),
                ('invest_value', models.BigIntegerField(blank=True, default=0, null=True)),
                ('total_money', models.BigIntegerField(blank=True, default=100000000, null=True)),
                ('password', models.CharField(db_column='user_password', max_length=128, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'userdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Macroeconomicindicators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateField(blank=True, null=True)),
                ('kospi', models.FloatField(blank=True, null=True)),
                ('america_top_500', models.FloatField(blank=True, null=True)),
                ('gold', models.FloatField(blank=True, null=True)),
                ('copper', models.FloatField(blank=True, null=True)),
                ('k_gov3', models.FloatField(blank=True, null=True)),
                ('usd_k', models.FloatField(blank=True, null=True)),
                ('inflation', models.IntegerField(blank=True, null=True)),
                ('treasury_bonds', models.IntegerField(blank=True, null=True)),
                ('tightening', models.IntegerField(blank=True, null=True)),
                ('normality', models.IntegerField(blank=True, null=True)),
                ('powell', models.IntegerField(blank=True, null=True)),
                ('dispute', models.IntegerField(blank=True, null=True)),
                ('japan', models.IntegerField(blank=True, null=True)),
                ('volume', models.IntegerField(blank=True, null=True)),
                ('chairman', models.IntegerField(blank=True, null=True)),
                ('remarks', models.IntegerField(blank=True, null=True)),
                ('thought', models.IntegerField(blank=True, null=True)),
                ('effect', models.IntegerField(blank=True, null=True)),
                ('anxiety', models.IntegerField(blank=True, null=True)),
                ('buying', models.IntegerField(blank=True, null=True)),
                ('volatility', models.IntegerField(blank=True, null=True)),
                ('early_stage', models.IntegerField(blank=True, null=True)),
                ('decline', models.IntegerField(blank=True, null=True)),
                ('learning_result', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'macroeconomicindicators',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Modelresult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateField()),
                ('xgb_short_result', models.FloatField(blank=True, null=True)),
                ('xgb_long_result', models.FloatField(blank=True, null=True)),
                ('lstm_short_result', models.FloatField(blank=True, null=True)),
                ('lstm_long_result', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'modelresult',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stockcode',
            fields=[
                ('stock_code', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('stock_name', models.CharField(blank=True, max_length=50, null=True)),
                ('xgb_short_pred', models.FloatField(blank=True, null=True)),
                ('xgb_long_pred', models.FloatField(blank=True, null=True)),
                ('ltms_short_pred', models.FloatField(blank=True, null=True)),
                ('ltms_long_pred', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stockcode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stockdata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_time', models.DateField(blank=True, null=True)),
                ('start_open', models.FloatField(blank=True, null=True)),
                ('high', models.FloatField(blank=True, null=True)),
                ('low', models.FloatField(blank=True, null=True)),
                ('end_close', models.FloatField(blank=True, null=True)),
                ('trading_volume', models.FloatField(blank=True, null=True)),
                ('transaction_amount', models.FloatField(blank=True, null=True)),
                ('end_rate_change', models.FloatField(blank=True, null=True)),
                ('institutional_total', models.FloatField(blank=True, null=True)),
                ('other_corporations', models.FloatField(blank=True, null=True)),
                ('individual', models.FloatField(blank=True, null=True)),
                ('foreigner_total', models.FloatField(blank=True, null=True)),
                ('short_selling', models.FloatField(blank=True, null=True)),
                ('short_buying', models.FloatField(blank=True, null=True)),
                ('short_importance', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stockdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userstock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(blank=True, null=True)),
                ('stock_mean_price', models.IntegerField(blank=True, null=True)),
                ('stock_value', models.IntegerField(blank=True, null=True)),
                ('sum_stock_value', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'userstock',
                'managed': False,
            },
        ),
    ]
